# Xamarin.iOS
# Build a Xamarin.iOS project.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin
variables:
    P12password: ''
  
  trigger:
  - master
  
  pool:
    vmImage: 'macos-latest'
  
  steps:
  - script: echo 'dude'
    displayName: 'dude'
    enabled: false
  
  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
    displayName: 'Select the Xamarin SDK version'
    enabled: false
  
  #- task: InstallAppleCertificate@2
  #  displayName: 'Install an Apple certificate dev'
  #  inputs:
  #    certSecureFile: devcer2.p12
  #    certPwd: '$(P12password)'
  
  - task: InstallAppleCertificate@2
    displayName: 'Install an Apple certificate dist'
    inputs:
      certSecureFile: Certificates.p12
      certPwd: '$(P12password)'
  
  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install an Apple provisioning profile'
    inputs:
      provProfileSecureFile: Flashop_UAT_Push.mobileprovision
  
  - task: NuGetToolInstaller@1
  
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'
  
  - task: XamariniOS@2
    displayName: 'Build Xamarin.iOS solution **/*.sln'
    inputs:
      solutionFile: '**/*.sln'
      configuration: 'Release'
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      signingProvisioningProfileID: '$(APPLE_PROV_PROFILE_UUID)'
  
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.ipa'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
  
  - task: AppCenterDistribute@2
    displayName: 'Deploy **/*.ipa to Visual Studio App Center'
    inputs:
      serverEndpoint: Flashop
      appSlug: flashopllc/flashop
      appFile: '**/*.ipa'
      symbolsIncludeParentDirectory: false
      releaseNotesInput: Main
    condition: succeededOrFailed()