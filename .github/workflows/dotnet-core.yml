name: poiBuild

on: 
 push: 
  paths:
    - 'apis/poi/**'
  branches:
    - master
 pull_request:
    branches:
      - master
    paths:
      - 'apis/poi/**'
 
    
jobs:
  build:
    defaults:
      run:
        shell: bash
        working-directory: ./apis/poi/web

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1
        
    - name: ls
      run: ls

    # - name: Install dependencies
    #   working-directory: ./apis/poi
    #   run: dotnet restore

    # - name: Build
    #   working-directory: ./apis/poi
    #   run: dotnet build --configuration Release --no-restore

    # - name: Test
    #   working-directory: ./apis/poi/tests/UnitTests
    #   run: dotnet test


    # - name: cd
    #   run: cd\
    
    # - name: cd
    #   run: cd apis

    # - name: ls
    #   run: ls
      



    - name: Build Info
      run: echo $GITHUB_RUN_NUMBER
        
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-poi:$GITHUB_RUN_NUMBER
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-poi:$GITHUB_RUN_NUMBER 
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Azure WebApp
    #   uses: Azure/webapps-deploy@v2
    #   with:
    #     app-name: openhacks3u8wqs3poi
    #     slot-name: staging
    #     images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-poi:$GITHUB_RUN_NUMBER

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az account show
          az storage -h
          az webapp config container set --name openhacks3u8wqs3poi --resource-group openhacks3u8wqs3rg --docker-custom-image-name "openhacks3u8wqs3acr.azurecr.io/devopsoh/api-poi:$GITHUB_RUN_NUMBER" --docker-registry-server-url ${{ secrets.REGISTRY_LOGIN_SERVER }} --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} --slot staging

    - name: Sleep for 30 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '300s'

    - name: curl
      uses: wei/curl@master
      with:
        args: https://openhacks3u8wqs3poi-staging.azurewebsites.net/api/healthcheck/poi

    - name: Azure CLI script
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az webapp deployment slot swap --name openhacks3u8wqs3poi  --resource-group openhacks3u8wqs3rg --slot staging --target-slot production



     
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
      

